/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ticTacToe;

import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author dell
 */
public class Game extends javax.swing.JFrame {

    private JButton [][]button=new JButton[3][3];
    private Bord bord;   
    private int player=1;
    /**
     * Creates new form Game
     */
    protected void setButtonReference ()
    {
        button[0][0]= jButton1; 
        button[0][1]= jButton2; 
        button[0][2]= jButton3; 
        button[1][0]= jButton4; 
        button[1][1]= jButton5;
        button[1][2]= jButton6; 
        button[2][0]= jButton7; 
        button[2][1]= jButton8; 
        button[2][2]= jButton9;
    }
    public Game() {
        super("Tic Tac Toe");
        initComponents();
        setResizable(false);
        Toolkit tool=Toolkit.getDefaultToolkit();
        Image img=tool.getImage("D:\\NEWJAVA\\Tic-Tac-Toe\\src\\Gallery\\Icon.jpg");
        setIconImage(img);
        
        
    }

      public void setPlayer(int value)
      {
          player=value;
      }
      public void refereshBordDisply()
      {
          for(int i=0;i<3;i++)
          {
              for(int j=0;j<3;j++)
              {
                  switch(bord.getBordValue(i, j))
                  {
                      case 2:
                          button[i][j].setEnabled(true);
                          button[i][j].setText("");
                          break;
                      case 3:
                          button[i][j].setEnabled(false);
                          button[i][j].setText("X");
                          break;
                      case 5:     
                          button[i][j].setEnabled(false);
                          button[i][j].setText("O");
                          break;
                  }
              }
          }
      }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jButton8.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jButton8ComponentResized(evt);
            }
        });
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(31, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(28, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        if(player ==1)
        {
            bord.setBordValue(1, 2, 3);
            this.refereshBordDisply();
            if(bord.checkWin(1))
            {
                JOptionPane.showMessageDialog(this, "CONGRATS YOU WIN");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else if(bord.isBordFilled())
            {
                JOptionPane.showMessageDialog(this, "GAME DRAW");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else 
            {
                this.setPlayer(3-player);
                this.playComputer();
            }
        }
        else 
            //Player ==2
        {
            bord.setBordValue(1, 2, 5);
            this.refereshBordDisply();
            if(bord.checkWin(2))
            {
                JOptionPane.showMessageDialog(this, "CONGRATS YOU WIN");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else if(bord.isBordFilled())
            {
                JOptionPane.showMessageDialog(this, "GAME DRAW");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else 
            {
                this.setPlayer(3-player);
                this.playComputer();
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        if(player ==1)
        {
            bord.setBordValue(2, 0, 3);
            this.refereshBordDisply();
            if(bord.checkWin(1))
            {
                JOptionPane.showMessageDialog(this, "CONGRATS YOU WIN");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else if(bord.isBordFilled())
            {
                JOptionPane.showMessageDialog(this, "GAME DRAW");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else 
            {
                this.setPlayer(3-player);
                this.playComputer();
            }
        }
        else 
            //Player ==2
        {
            bord.setBordValue(2, 0, 5);
            this.refereshBordDisply();
            if(bord.checkWin(2))
            {
                JOptionPane.showMessageDialog(this, "CONGRATS YOU WIN");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else if(bord.isBordFilled())
            {
                JOptionPane.showMessageDialog(this, "GAME DRAW");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else 
            {
                this.setPlayer(3-player);
                this.playComputer();
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        if(player ==1)
        {
            bord.setBordValue(2, 1, 3);
            this.refereshBordDisply();
            if(bord.checkWin(1))
            {
                JOptionPane.showMessageDialog(this, "CONGRATS YOU WIN");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else if(bord.isBordFilled())
            {
                JOptionPane.showMessageDialog(this, "GAME DRAW");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else 
            {
                this.setPlayer(3-player);
                this.playComputer();
            }
        }
        else 
            //Player ==2
        {
            bord.setBordValue(2, 1, 5);
            this.refereshBordDisply();
            if(bord.checkWin(2))
            {
                JOptionPane.showMessageDialog(this, "CONGRATS YOU WIN");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else if(bord.isBordFilled())
            {
                JOptionPane.showMessageDialog(this, "GAME DRAW");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else 
            {
                this.setPlayer(3-player);
                this.playComputer();
            }
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        if(player ==1)
        {
            bord.setBordValue(2, 2, 3);
            this.refereshBordDisply();
            if(bord.checkWin(1))
            {
                JOptionPane.showMessageDialog(this, "CONGRATS YOU WIN");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else if(bord.isBordFilled())
            {
                JOptionPane.showMessageDialog(this, "GAME DRAW");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else 
            {
                this.setPlayer(3-player);
                this.playComputer();
            }
        }
        else 
            //Player ==2
        {
            bord.setBordValue(2, 2, 5);
            this.refereshBordDisply();
            if(bord.checkWin(2))
            {
                JOptionPane.showMessageDialog(this, "CONGRATS YOU WIN");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else if(bord.isBordFilled())
            {
                JOptionPane.showMessageDialog(this, "GAME DRAW");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else 
            {
                this.setPlayer(3-player);
                this.playComputer();
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if(player ==1)
        {
            bord.setBordValue(1, 0, 3);
            this.refereshBordDisply();
            if(bord.checkWin(1))
            {
                JOptionPane.showMessageDialog(this, "CONGRATS YOU WIN");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else if(bord.isBordFilled())
            {
                JOptionPane.showMessageDialog(this, "GAME DRAW");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else 
            {
                this.setPlayer(3-player);
                this.playComputer();
            }
        }
        else 
            //Player ==2
        {
            bord.setBordValue(1, 0, 5);
            this.refereshBordDisply();
            if(bord.checkWin(2))
            {
                JOptionPane.showMessageDialog(this, "CONGRATS YOU WIN");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else if(bord.isBordFilled())
            {
                JOptionPane.showMessageDialog(this, "GAME DRAW");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else 
            {
                this.setPlayer(3-player);
                this.playComputer();
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(player ==1)
        {
            bord.setBordValue(0, 1, 3);
            this.refereshBordDisply();
            if(bord.checkWin(1))
            {
                JOptionPane.showMessageDialog(this, "CONGRATS YOU WIN");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else if(bord.isBordFilled())
            {
                JOptionPane.showMessageDialog(this, "GAME DRAW");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else 
            {
                this.setPlayer(3-player);
                this.playComputer();
            }
        }
        else 
            //Player ==2
        {
            bord.setBordValue(0, 1, 5);
            this.refereshBordDisply();
            if(bord.checkWin(2))
            {
                JOptionPane.showMessageDialog(this, "CONGRATS YOU WIN");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else if(bord.isBordFilled())
            {
                JOptionPane.showMessageDialog(this, "GAME DRAW");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else 
            {
                this.setPlayer(3-player);
                this.playComputer();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(player ==1)
        {
            bord.setBordValue(0, 0, 3);
            this.refereshBordDisply();
            if(bord.checkWin(1))
            {
                JOptionPane.showMessageDialog(this, "CONGRATS YOU WIN");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else if(bord.isBordFilled())
            {
                JOptionPane.showMessageDialog(this, "GAME DRAW");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else 
            {
                this.setPlayer(3-player);
                this.playComputer();
            }
        }
        else 
            //Player ==2
        {
            bord.setBordValue(0, 0, 5);
            this.refereshBordDisply();
            if(bord.checkWin(2))
            {
                JOptionPane.showMessageDialog(this, "CONGRATS YOU WIN");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else if(bord.isBordFilled())
            {
                JOptionPane.showMessageDialog(this, "GAME DRAW");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else 
            {
                this.setPlayer(3-player);
                this.playComputer();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if(player ==1)
        {
            bord.setBordValue(1, 1, 3);
            this.refereshBordDisply();
            if(bord.checkWin(1))
            {
                JOptionPane.showMessageDialog(this, "CONGRATS YOU WIN");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else if(bord.isBordFilled())
            {
                JOptionPane.showMessageDialog(this, "GAME DRAW");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else 
            {
                this.setPlayer(3-player);
                this.playComputer();
            }
        }
        else 
            //Player ==2
        {
            bord.setBordValue(1, 1, 5);
            this.refereshBordDisply();
            if(bord.checkWin(2))
            {
                JOptionPane.showMessageDialog(this, "CONGRATS YOU WIN");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else if(bord.isBordFilled())
            {
                JOptionPane.showMessageDialog(this, "GAME DRAW");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else 
            {
                this.setPlayer(3-player);
                this.playComputer();
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(player ==1)
        {
            bord.setBordValue(0, 2, 3);
            this.refereshBordDisply();
            if(bord.checkWin(1))
            {
                JOptionPane.showMessageDialog(this, "CONGRATS YOU WIN");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else if(bord.isBordFilled())
            {
                JOptionPane.showMessageDialog(this, "GAME DRAW");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else 
            {
                this.setPlayer(3-player);
                this.playComputer();
            }
        }
        else 
            //Player ==2
        {
            bord.setBordValue(0, 2, 5);
            this.refereshBordDisply();
            if(bord.checkWin(2))
            {
                JOptionPane.showMessageDialog(this, "CONGRATS YOU WIN");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else if(bord.isBordFilled())
            {
                JOptionPane.showMessageDialog(this, "GAME DRAW");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
            else 
            {
                this.setPlayer(3-player);
                this.playComputer();
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton8ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jButton8ComponentResized

    }//GEN-LAST:event_jButton8ComponentResized

    public void playComputer()
    {
        //1.possible win  which return button number
        //the buttom number is not equal to zero
        //2. possible win function all and pass 3-win player return buton number
        //if button number is not equal to zero then play more
        //3.buttonnumber return randon blank button play
        //play move
        
        int buttonNumber;
        buttonNumber=bord.possibleWin(player);
        if(buttonNumber==0)
        {
            buttonNumber=bord.possibleWin(3-player);
        }
        if(buttonNumber==0)
        {
            buttonNumber=bord.randonBlankButton();
        }
        if(buttonNumber!=0)
        {
            switch(buttonNumber)
            {
                case 1: 
                    if(player==1)
                    {
                        bord.setBordValue(0, 0, 3);
                    }
                    else 
                    {
                        bord.setBordValue(0, 0, 5);
                    }
                    this.refereshBordDisply();
                    break;
                case 2:
                    if(player==1)
                    {
                        bord.setBordValue(0, 1, 3);
                    }
                    else 
                    {
                        bord.setBordValue(0, 1, 5);
                    }
                    this.refereshBordDisply();
                    break;                
                case 3:
                    if(player==1)
                    {
                        bord.setBordValue(0, 2, 3);
                    }
                    else 
                    {
                        bord.setBordValue(0, 2, 5);
                    }
                    this.refereshBordDisply();
                    break;                
                case 4:
                    if(player==1)
                    {
                        bord.setBordValue(1, 0, 3);
                    }
                    else 
                    {
                        bord.setBordValue(1, 0, 5);
                    }
                    this.refereshBordDisply();
                    break;                
                case 5:
                    if(player==1)
                    {
                        bord.setBordValue(1, 1, 3);
                    }
                    else 
                    {
                        bord.setBordValue(1, 1, 5);
                    }
                    this.refereshBordDisply();
                    break;                
                case 6:
                    if(player==1)
                    {
                        bord.setBordValue(1, 2, 3);
                    }
                    else 
                    {
                        bord.setBordValue(1,2, 5);
                    }
                    this.refereshBordDisply();
                    break;               
                case 7:
                    if(player==1)
                    {
                        bord.setBordValue(2, 0, 3);
                    }
                    else 
                    {
                        bord.setBordValue(2, 0, 5);
                    }
                    this.refereshBordDisply();
                    break;                
                case 8:
                    if(player==1)
                    {
                        bord.setBordValue(2, 1, 3);
                    }
                    else 
                    {
                        bord.setBordValue(2, 1, 5);
                    }
                    this.refereshBordDisply();
                    break;                
                case 9:
                    if(player==1)
                    {
                        bord.setBordValue(2, 2, 3);
                    }
                    else 
                    {
                        bord.setBordValue(2, 2, 5);
                    }
                    this.refereshBordDisply();
                    break;                
            }
            
        }
        if(bord.checkWin(player))
            {
                JOptionPane.showMessageDialog(this, "COMPUTER WINS");
                bord.initializeBord();
                this.refereshBordDisply();
                this.setPlayer(1);
            }
        else if (bord.isBordFilled())
        {
             JOptionPane.showMessageDialog(this, "MATCH DRAW");
             bord.initializeBord();
             this.refereshBordDisply();
             this.setPlayer(1);
        }
        else 
        {
            setPlayer(3-player);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               Game game = new Game();
               game.setVisible(true);
               game.setButtonReference();
               game.bord=new Bord();
               game.bord.initializeBord();
               game.setPlayer(1);
               game.refereshBordDisply();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
